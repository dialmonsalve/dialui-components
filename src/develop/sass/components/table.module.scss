@use "../abstract/variables/globalVariables" as Gv;
@use "../abstract/mixins/globalMixins" as Gm;

//@dialmonsalve
.table {
  border-spacing: 0;
  border-collapse: collapse;
  width: 100%;
  top: 0;
}

.td,
.th {
  padding: 8px;
  border-top: 1px solid Gv.$color-gray-100;
  border-bottom: 1px solid Gv.$color-gray-100;
  font-size: 12px;

  @include Gm.responsive(tab-port) {
    font-size: 16px;
  }
}

.thead .tr {
  text-transform: uppercase;
  text-align: center;
}

.thead {
  position: sticky;
  top: 0;
  z-index: 1;
}

.tr {
  &:active {
    outline: 2px solid Gv.$color-white-100;
  }
}

.tr {
  @include Gm.responsive(tab-port) {
    transition: background-color 0.2s ease-in-out, color 0.2s ease;
  }
}

.thead > .tr .th {
  padding: 14px 8px;
}

.yellow {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-yellow-100, Gv.$color-gray-400);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-yellow-200, Gv.$color-gray-400);
  }
}

.thead .yellow {
  @include Gm.color(Gv.$color-yellow-600, Gv.$color-white-100);
}

.blue {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-blue-100);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-blue-200);
  }
}

.thead .blue {
  @include Gm.color(Gv.$color-blue-600, Gv.$color-white-100);
}

.red {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-red-300);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-red-200);
  }
}

.thead .red {
  @include Gm.color(Gv.$color-red-600, Gv.$color-white-100);
}

.green {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-green-100);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-green-200);
  }
}

.thead .green {
  @include Gm.color(Gv.$color-green-600, Gv.$color-white-100);
}

.purple {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-purple-100);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-purple-200);
  }
}

.thead .purple {
  @include Gm.color(Gv.$color-purple-500, Gv.$color-white-100);
}

.pink {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-pink-100);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-pink-200);
  }
}

.thead .pink {
  @include Gm.color(Gv.$color-pink-400, Gv.$color-white-100);
}

.orange {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-orange-100);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-orange-200);
  }
}

.thead .orange {
  @include Gm.color(Gv.$color-orange-400, Gv.$color-white-100);
}

.gray {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-gray-100);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-gray-200);
  }
}

.thead .gray {
  @include Gm.color(Gv.$color-gray-400, Gv.$color-white-100);
}

.black {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-black-300, Gv.$color-white-100);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-black-200, Gv.$color-white-100);
  }
}

.thead .black {
  @include Gm.color(Gv.$color-black-400, Gv.$color-white-100);
}

.white {
  &:nth-child(even) {
    @include Gm.color(Gv.$color-white-100);
  }
  &:nth-child(odd) {
    @include Gm.color(Gv.$color-white-200);
  }
}
